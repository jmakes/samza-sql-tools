apply from: file('gradle/license.gradle')
apply from: file('gradle/environment.gradle')
apply from: file("gradle/dependency-versions.gradle")

buildscript {
  repositories {
    mavenCentral()
  }
  apply from: file('gradle/buildscript.gradle'), to: buildscript
}

allprojects {
  group = "com.github.samza"

  apply plugin: 'eclipse'
  apply plugin: 'idea'
  apply plugin: 'project-report'
  apply plugin: 'checkstyle'

  repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
  }
}

idea {
  project {
    languageLevel = 1.8
  }
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'pegasus'

  testReportDirName = "${project.rootDir}/out/${project.name}/"

  // Avoid failure in internal LinkedIn build validation
  if (!ext.has('spec')) {
    ext.spec = [:]
  }

  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'

  checkstyle {
    configFile = file("${project.rootDir}/checkstyle/checkstyle.xml")
    sourceSets = [ getProject().sourceSets.main, getProject().sourceSets.test ]
    toolVersion = "6.7"
    ignoreFailures = false
  }
}

project(':samza-sql-demo') {

  dependencies {
    compile "log4j:log4j:$log4jVersion"
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    compile "commons-cli:commons-cli:$commonsCliVersion"
    compile "org.apache.avro:avro:$avroVersion"
    compile "org.apache.commons:commons-lang3:$commonslang3Version"
    compile "org.apache.kafka:kafka-clients:$kafkaVersion"
    compile "org.apache.samza:samza-sql:$samzaVersion"
    compile "org.apache.samza:samza-api:$samzaVersion"
  }

  tasks.create(name: "releaseTarGz", dependsOn: configurations.archives.artifacts, type: Tar) {
    into "samza-sql-demo-${version}"
    compression = Compression.GZIP
    from(project.file("./scripts")) { into "scripts/" }
    from(project.file("./config")) { into "config/" }
    from(configurations.runtime) { into("libs/") }
    from(configurations.archives.artifacts.files) { into("libs/") }
    duplicatesStrategy 'exclude'
  }
}
